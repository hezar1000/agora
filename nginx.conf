upstream daphne_servers {
    server localhost:8080;
    server localhost:8081;
    server localhost:8082;
    server localhost:8083;
}

server {
    server_name agora.students.cs.ubc.ca;
    listen 80;
    return 301 https://agora.students.cs.ubc.ca$request_uri;
}

server {
    server_name agora.students.cs.ubc.ca;
    listen 443 ssl http2;
    charset utf-8;

    access_log /var/agora/log/nginx-access.log;
    error_log /var/agora/log/nginx-error.log;

#    ssl on;
    ssl_certificate /etc/letsencrypt/live/agora.students.cs.ubc.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agora.students.cs.ubc.ca/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Content-Type-Options nosniff;
    # add_header X-Frame-Options SAMEORIGIN;
    # add_header Content-Security-Policy "frame-ancestors 'self'";
    add_header Content-Security-Policy "frame-ancestors 'self' https://firas.moosvi.com";
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    client_max_body_size 10M;

    location /static {
        alias /var/agora/static;
    }

    location /media  {
        alias /var/agora/uploads;
    }


    location /ws {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_connect_timeout 1200s;
        proxy_read_timeout 1200s;
        proxy_send_timeout 1200s;
        proxy_buffering off;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://daphne_servers;

        proxy_redirect off;

    }


    location / {
#  Next 3 lines added for WebSocket support if proxy_pass to TCP ports is used
# but that isn't the case in the initial configuration.
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "Upgrade";

	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
#  WebSocket support seems to require TCP, not unix: sockets, so presumably
        proxy_pass http://daphne_servers;          #to Hedayat: comment this to use uwsgi in things went wrong
#  instead of the uwsgi_pass unix:/var/agora/agora-uwsgi.sock;
#        uwsgi_pass unix:/var/agora/agora-uwsgi.sock;  #to Hedayat: uncomment this to use uwsgi in things went wrong
#        include /etc/nginx/uwsgi_params;          #to Hedayat: uncomment this to use uwsgi in things went wrong
    }

}
